
동기 -> Sync
비동기 -> Async

동기 방식
    - 작업을 순서대로 진행
    - ex) A -> B -> C -> D
    - 위에서부터 아래로 실행

비동기 방식
    -  쓰레드를 만들어서 작업을 따로 처리한다

    안드로이드에서 Async를 다루는 방법
        - AsyncTask를 상속받는다
            -> onPreExcute          : 쓰레드 출발하기전에 할 작업
            -> doIntBackground      : 쓰레드가 할 작업
            -> onPregressUpdate     : 중간중간에 MainTread로 온다
            -> onPostExcute         : 작업을 다 마친 후 MainTread로 돌아온다

    Async의 장점
        - Main Thread를 기다리게 할 필요가 없다
        - 네트워크 작업

    Async의 단점
        - 재사용이 불가능
        - 구현된 Activity가 종료될 경우 따라서 종료되지 않는다
        - AsyncTask는 하나만 실행될 수 있다 (병렬 처리가 안된다)